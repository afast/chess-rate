= stylesheet_link_tag 'nv.d3.min'
= javascript_include_tag 'd3.v3.min'
= javascript_include_tag 'nv.d3.min'
:javascript
  $(function(){
    $('ul.nav.nav-tabs').on('click', 'li.performance', function(){
      var parseDate = d3.time.format("%Y-%m-%d").parse;
      nv.addGraph(function() {
        var chart = nv.models.lineChart();

        chart.margin({left: 100});
        chart.xAxis
          .axisLabel('#{t('date')}')
          .tickFormat(function(d) { return d3.time.format('%Y-%m-%d')(new Date(d)); })

        chart.yAxis
          .axisLabel('ELO');

        data = JSON.parse($('#performance svg').attr('data-elo'));
        data[0].values = $.map(data[0].values, function(item, index){
          if (typeof(item.x) != 'undefined' && item.x != null)
            item.x = parseDate(item.x);
          return item;
        });
        d3.select('#performance svg')
          .datum(data)
          .transition().duration(500)
          .call(chart);

        nv.utils.windowResize(function() { d3.select('#performance svg').call(chart) });

        return chart;
      });
      $('ul.nav.nav-tabs').off('click', 'li.performance');
    });
    $('ul.nav.nav-tabs').on('click', 'li.game_performance', function(){
      nv.addGraph(function() {
        var chart = nv.models.lineWithFocusChart();

        chart.margin({left: 100});
        chart.xAxis
          .tickFormat(d3.format(',f'))
          .axisLabel('#{t('move.label')}');

        chart.yAxis
          .axisLabel('#{t('distance')}')
          .tickFormat(d3.format(',.02f'));

        data = $('#game_performance svg').data('game-performance');
        d3.select('#game_performance svg')
          .datum(data)
          .transition().duration(500)
          .call(chart);

        nv.utils.windowResize(function() { d3.select('#game_performance svg').call(chart) });

        return chart;
      });
      $('ul.nav.nav-tabs').off('click', 'li.game_performance');
    });
  });

.container
  .row
    .page-header
      %h1
        = @player.name

    %ul.nav.nav-tabs
      %li{class: (params[:collection] ? '' : 'active')}
        %a{data: {toggle: 'tab'}, href: '#tournaments'}= t('tournaments')
      %li{class: (params[:collection] ? 'active' : '')}
        %a{data: {toggle: 'tab'}, href: '#collection'}= t('collection')
      %li
        %a{data: {toggle: 'tab'}, href: '#games'}= t('game.all')
      %li.performance
        %a{data: {toggle: 'tab'}, href: '#performance'}= t('performance')
      %li.game_performance
        %a{data: {toggle: 'tab'}, href: '#game_performance'}= t('game_performance')


    .tab-content
      #tournaments.tab-pane{class: (params[:collection] ? '' : 'active')}
        %table.table.table-condensed.table-striped.table-hover
          %tr
            %th= t('tournament')
            %th= t('start')
            %th= t('end')
            %th
              = t('avg_error')
              %span.label.label-default
                cp
            %th
              = t('avg_deviation')
              %span.label.label-default
                cp
            %th
              = t('perfect_rate')
              %span.label.label-default
                \%
            %th
              = t('blunder_rate')
              %span.label.label-default
                \%
          - @tournaments.each do |t|
            %tr
              %td= t[:name]
              %td= t[:start_date]
              %td= t[:end_date]
              %td= '%.2f' % t[:avg_error]
              %td= '%.2f' % t[:avg_deviation]
              %td= '%.2f' % t[:perfect_rate]
              %td= '%.2f' % t[:blunder_rate]
      #collection.tab-pane{class: (params[:collection] ? 'active' : '')}
        = form_tag player_path(@player), method: :get do
          = select_tag :collection, options_from_collection_for_select(@collections, :id, :description, @collection.id)
        %table.table.table-condensed.table-striped.table-hover
          %tr
            %th= t('tournament')
            %th= t('start')
            %th= t('end')
            %th= t('color.label')
            %th= t('elo')
            %th= t('rival')
            %th= t('rival_elo')
            %th= t('result')
            %th
              = t('avg_error')
              %span.label.label-default
                cp
            %th
              = t('avg_deviation')
              %span.label.label-default
                cp
            %th
              = t('perfect_rate')
              %span.label.label-default
                \%
            %th
              = t('blunder_rate')
              %span.label.label-default
                \%
          - @collection.games.for_player(@player.id).each do |game|
            - g = game.get_info_for(@player.name)
            %tr
              %td= g[:name]
              %td= g[:start_date]
              %td= g[:end_date]
              %td= g[:color]
              %td= g[:elo]
              %td= g[:rival]
              %td= g[:rival_elo]
              %td= pretty_result(g[:result])
              %td= '%.2f' % g[:avg_err]
              %td= '%.2f' % g[:std_dev]
              %td= '%.2f' % g[:perfect]
              %td= '%.2f' % g[:blunders]
      #games.tab-pane
        %table.table.table-condensed.table-striped.table-hover
          %tr
            %th= t('tournament')
            %th= t('start')
            %th= t('end')
            %th
              = t('avg_error')
              %span.label.label-default
                cp
            %th
              = t('avg_deviation')
              %span.label.label-default
                cp
            %th
              = t('perfect_rate')
              %span.label.label-default
                \%
            %th
              = t('blunder_rate')
              %span.label.label-default
                \%
          - @games.each do |g|
            %tr
              %td= g[:name]
              %td= g[:start_date]
              %td= g[:end_date]
              %td= '%.2f' % g[:avg_err]
              %td= '%.2f' % g[:std_dev]
              %td= '%.2f' % g[:perfect]
              %td= '%.2f' % g[:blunders]
      #performance.tab-pane
        %svg#elo{style: 'height: 580px; width: 1170px', data: {elo: elo_data(@player).to_json}}
      #game_performance.tab-pane
        %svg#game{style: 'height: 580px; width: 970px', data: {game_performance: game_performance_data(@player).to_json}}

    = link_to t('back'), players_path, class: 'btn btn-primary'
